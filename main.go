package main

import (
	"context"
	"github.com/go-telegram/bot"
	"github.com/go-telegram/bot/models"
	"strings"
)

var saveMap = make(map[int64][]string)

//–≤ –º–∞–ø–µ int64 —Ç–∏–ø –∫–ª—é—á–∞, string —Ç–∏–ø –∑–Ω–∞—á–µ–Ω–∏—è, –∫–ª—é—á–æ–º —É –Ω–∞—Å –±—É–¥–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

func main() {

	ctx := context.Background()
	opts := []bot.Option{
		bot.WithDefaultHandler(handler),
	}

	b, err := bot.New("6689732780:AAFWWLcbl91Xhh_K3_-MDDJzzDKGqR68Hvs", opts...)
	if err != nil {
		panic(err)
	}

	b.Start(ctx)
}

func handler(ctx context.Context, b *bot.Bot, update *models.Update) {

	switch {
	case strings.HasPrefix(update.Message.Text, "save"): //–ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—á–∞–ª–æ —Å—Ç—Ä–æ–∫–∏ —Å —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ—Ñ–∏–∫—Å–∞
		chatID := update.Message.Chat.ID                                //—Ç—É—Ç –º—ã –ø—Ä–∏—Å–≤–∞–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		saveMesUser := strings.TrimPrefix(update.Message.Text, "save ") //—É–¥–∞–ª—è–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å –∏–∑ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ (–µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å)
		saveMap[chatID] = append(saveMap[chatID], saveMesUser)          //—Ç—É—Ç –º—ã –ø—Ä–∏ –ø–æ–º–æ—â–∏ —Ñ—É–Ω–∫—Ü–∏–∏ append –¥–æ–±–∞–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Å–ª–∞–π—Å                                  //—Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

	case strings.HasPrefix(update.Message.Text, "get"):
		chatID := update.Message.Chat.ID
		saveMesUser := "No saved words"

		if savedText, ok := saveMap[chatID]; ok { //–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
			saveMesUser = savedText[len(savedText)-1] //—Ç–∞–∫–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å–ª–∞–π—Å–∞
		}

		b.SendMessage(ctx, &bot.SendMessageParams{ //–≤—ã–≤–æ–¥, –µ—Å–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –Ω–µ –±—ã–ª–æ, –≤—ã–≤–µ–¥–µ–º –ø—Ä–∏—Å–≤–æ–µ–Ω–Ω–æ–µ —Ä–∞–Ω–µ–µ "No saved words"
			ChatID: update.Message.Chat.ID,
			Text:   saveMesUser,
		})

	case strings.HasPrefix(update.Message.Text, "all"):
		chatID := update.Message.Chat.ID
		saveMesUser := "No saved words"

		if savedText, ok := saveMap[chatID]; ok {
			saveMesUser = strings.Join(savedText, "\n")
		}
		b.SendMessage(ctx, &bot.SendMessageParams{
			ChatID: update.Message.Chat.ID,
			Text:   saveMesUser,
		})
	default:
		b.SendMessage(ctx, &bot.SendMessageParams{
			ChatID: update.Message.Chat.ID,
			Text:   "–ë—É–¥—å—Ç–µ –∑–¥–æ—Ä–æ–≤—ã! Please enter correct command:\n\nsave, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ\nget, –≤—ã–≤–µ—Å—Ç–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ \nall, –≤—ã–≤–µ—Å—Ç–∏ –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n\n(—è –µ—â–µ –º–∞–ª–µ–Ω—å–∫–∏–π –±–æ—Ç, –Ω–æ —É–∂–µ –Ω–µ –ø—É–≥–∞—é—Å—å —Å–æ–≤ü¶â)",
		})
	}
}
